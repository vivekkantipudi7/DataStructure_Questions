 // Function to return list containing vertices in Topological order.
                                        
// 1-->2-->3-->4  undhi anuko 1,2,3,4 avvudhi     // Direct Acyclic Graph ke avvudhi idhi
                                                  //same Dfs code dhadhapu kaani manam stack lo store chestham 
     
    void Dfs(vector<vector<int>>& adj, int u, vector<bool>& visited, stack<int>& st)
    {
        visited[u]=true;
        
        for(auto &v : adj[u])
        {
            if(!visited[v])
            {
                Dfs(adj, v, visited, st);
            }
        }
        
        st.push(u);
    }
    vector<int> topologicalSort(vector<vector<int>>& adj) {
        // Your code 
        int V = adj.size();
        vector<bool>visited(V, false);
        stack<int>st;
        for(int i=0;i<V;i++)
        {
            if(!visited[i])
            {  
                Dfs(adj, i, visited, st);
            }
        }
        vector<int>result;
        
        while(!st.empty())
        {
            result.push_back(st.top());
            st.pop();
        }
        return result;
    }
