  // Function to return list containing vertices in Topological order.

      // indegree ane term use chestham ikkada, ante lets take 0-->1<--2-->3 ikkada 0 ki indegree=0, 1 ki {2} endhukante 2 point chesthunnai kabatti ala

    vector<int> topologicalSort(vector<vector<int>>& adj) {
        // Your code here
        int V = adj.size();
        vector<int>indegree(V, 0);
        
        for(int i=0;i<V;i++)
        {
            for(auto &v : adj[i])
            {
                indegree[v]++;              // indegree array chesthunnaam
            }
        }
        queue<int>q;
        for(int i=0; i<V;i++)
        {
            if(indegree[i] == 0)
            {
                q.push(i);                 // indegree=0  unna elements ni queue loki push chestham
            }
        }
        vector<int>result;
        while(!q.empty())
        {
            int u = q.front();             //Basic Bfs code
            q.pop();
            result.push_back(u);
            for(int &v : adj[u])
            {
                indegree[v]--;   // ikkada manam oko element daggaraki vellinappudu dhani indegree thaggistham, so eppudaithe indegree=0 osthadho malli queue loki push chestham
                
                if(indegree[v]==0)
                {
                    q.push(v);
                }
            }
        }
        return result;
    }
