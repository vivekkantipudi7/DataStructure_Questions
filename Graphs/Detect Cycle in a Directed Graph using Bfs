 bool isCyclic(int V, vector<vector<int>> adj) {
        // code here
        vector<int>inDegree(V, 0);
        
        for(int i =0 ;i<V;i++)
        {
            for(auto &v : adj[i])
            {
                inDegree[v]++;
            }
        }
        queue<int>q;
        for(int i=0;i<V;i++)
        {
            if(inDegree[i]==0)
            {
                q.push(i);
            }
        }
        int count =0;
        while(!q.empty())
        {
            int u = q.front();
            count++;
            q.pop();
                                                    // Same khans algo rastham, khans algo is for DAG(directed acyclic graph). So, okavela acyclic aithe we will get count==N
                                                    // So we will return false else return true
            for(auto &v : adj[u])
            {
                inDegree[v]--;
                
                if(inDegree[v] == 0)
                {
                    q.push(v);
                }
            }
            
        }
        
        if(count == V)return false;
        else return true;
    }
};
